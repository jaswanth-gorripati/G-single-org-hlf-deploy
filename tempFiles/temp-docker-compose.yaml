version: '2'
volumes:
  peer0.{ORGANISATION_NAME}.example.com:
  peer1.{ORGANISATION_NAME}.example.com:
  peer2.{ORGANISATION_NAME}.example.com:
  orderer0.example.com:
  ca.{ORGANISATION_NAME}:
  couchdb0.{ORGANISATION_NAME}:
  couchdb1.{ORGANISATION_NAME}:
  couchdb2.{ORGANISATION_NAME}:
networks:
  NETWORK_NAME:
services:
  orderer0.example.com:
    image: hyperledger/fabric-orderer:1.4.0
    container_name: orderer0.example.com
    environment:
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=NETWORK_NAME
      - ORDERER_HOST=orderer0.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=solo
      - ORDERER_GENERAL_GENESISPROFILE=SoloOrdererProfile
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
      - ORDERER_HOME=/var/hyperledger/orderer
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LEDGERTYPE=file
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=50
      - CONFIGTX_ORDERER_BATCHTIMEOUT=2s
      - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_TLS_CLIENTAUTHREQUIRED=false
      - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
      - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
      - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    volumes:
      - ./genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls/:/var/hyperledger/orderer/tls
      - ./crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
      - orderer0.example.com:/var/hyperledger/production/orderer
      #- ./ledger/orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - NETWORK_NAME
  ca.{ORGANISATION_NAME}:
    image: hyperledger/fabric-ca:1.4.0
    container_name: ca-{ORGANISATION_NAME}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-{ORGANISATION_NAME}
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.{ORGANISATION_NAME}.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA_PRIVATE_KEY
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.{ORGANISATION_NAME}.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      #- ./fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
      - ./crypto-config/peerOrganizations/{ORGANISATION_NAME}.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ca.{ORGANISATION_NAME}:/etc/hyperledger/fabric-ca-server
      #- /usr/local/lib/softhsm/libsofthsm2.so:/usr/local/softhsm/libsofthsm2.so
      #- /var/lib/softhsm/tokens:/var/lib/softhsm/tokens
    networks:
      - NETWORK_NAME
  couchdb0.{ORGANISATION_NAME}:
    image: hyperledger/fabric-couchdb:0.4.14
    container_name: couchdb0.{ORGANISATION_NAME}
    ports:
      - 5984:5984
    volumes:
      - couchdb0.{ORGANISATION_NAME}:/opt/couchdb/data
    networks:
      - NETWORK_NAME
  peer0.{ORGANISATION_NAME}.example.com:
    image: hyperledger/fabric-peer:1.4.0
    container_name: peer0.{ORGANISATION_NAME}.example.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testnet_NETWORK_NAME
      #- FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_CHAINCODE_STARTUPTIMEOUT=1200s
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.{ORGANISATION_NAME}.example.com
      - CORE_PEER_ADDRESS=peer0.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_LOCALMSPID={ORGANISATION_NAME}MSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.{ORGANISATION_NAME}:5984
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer0.{ORGANISATION_NAME}.example.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer0.{ORGANISATION_NAME}.example.com/tls:/etc/hyperledger/fabric/tls
      - peer0.{ORGANISATION_NAME}.example.com:/var/hyperledger/production
      #- ./ledger/peer0.{ORGANISATION_NAME}.exapmle.com:/var/hyperledger/production
    ports:
      - "7051:7051"
      - "7053:7053"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    depends_on:
      - couchdb0.{ORGANISATION_NAME}
    networks:
      - NETWORK_NAME

  couchdb1.{ORGANISATION_NAME}:
    image: hyperledger/fabric-couchdb:0.4.14
    container_name: couchdb1.{ORGANISATION_NAME}
    ports:
      - 6984:5984
    volumes:
      - couchdb1.{ORGANISATION_NAME}:/opt/couchdb/data
    networks:
      - NETWORK_NAME
  peer1.{ORGANISATION_NAME}.example.com:
    image: hyperledger/fabric-peer:1.4.0
    container_name: peer1.{ORGANISATION_NAME}.example.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testnet_NETWORK_NAME
      #- FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_CHAINCODE_STARTUPTIMEOUT=1200s
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.{ORGANISATION_NAME}.example.com
      - CORE_PEER_ADDRESS=peer1.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_LOCALMSPID={ORGANISATION_NAME}MSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.{ORGANISATION_NAME}:5984
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer1.{ORGANISATION_NAME}.example.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer1.{ORGANISATION_NAME}.example.com/tls:/etc/hyperledger/fabric/tls
      - peer1.{ORGANISATION_NAME}.example.com:/var/hyperledger/production
      #- ./ledger/peer1.{ORGANISATION_NAME}.exapmle.com:/var/hyperledger/production
    ports:
      - "8051:7051"
      - "8053:7053"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    depends_on:
      - couchdb1.{ORGANISATION_NAME}
    networks:
      - NETWORK_NAME

  couchdb2.{ORGANISATION_NAME}:
    image: hyperledger/fabric-couchdb:0.4.14
    container_name: couchdb2.{ORGANISATION_NAME}
    ports:
      - 7984:5984
    volumes:
      - couchdb2.{ORGANISATION_NAME}:/opt/couchdb/data
    networks:
      - NETWORK_NAME
  peer2.{ORGANISATION_NAME}.example.com:
    image: hyperledger/fabric-peer:1.4.0
    container_name: peer2.{ORGANISATION_NAME}.example.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testnet_NETWORK_NAME
      #- FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_CHAINCODE_STARTUPTIMEOUT=1200s
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer2.{ORGANISATION_NAME}.example.com
      - CORE_PEER_ADDRESS=peer2.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer2.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_LOCALMSPID={ORGANISATION_NAME}MSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2.{ORGANISATION_NAME}:5984
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer2.{ORGANISATION_NAME}.example.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer2.{ORGANISATION_NAME}.example.com/tls:/etc/hyperledger/fabric/tls
      - peer2.{ORGANISATION_NAME}.example.com:/var/hyperledger/production
      #- ./ledger/peer2.{ORGANISATION_NAME}.exapmle.com:/var/hyperledger/production
    ports:
      - "9051:7051"
      - "9053:7053"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    depends_on:
      - couchdb2.{ORGANISATION_NAME}
    networks:
      - NETWORK_NAME

  {ORGANISATION_NAME}_cli:
    image: hyperledger/fabric-tools:1.4.0
    container_name: {ORGANISATION_NAME}_cli
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- FABRIC_LOGGING_SPEC=DEBUG
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID={ORGANISATION_NAME}_cli
      - CORE_PEER_ADDRESS=peer0.{ORGANISATION_NAME}.example.com:7051
      - CORE_PEER_LOCALMSPID={ORGANISATION_NAME}MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer0.{ORGANISATION_NAME}.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer0.{ORGANISATION_NAME}.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{ORGANISATION_NAME}.example.com/peers/peer0.{ORGANISATION_NAME}.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{ORGANISATION_NAME}.example.com/users/Admin@{ORGANISATION_NAME}.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./chaincode/:/opt/gopath/src/github.com/chaincode
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
      - ./:/opt/gopath/src/github.com/hyperledger/fabric/peer/
    depends_on:
      - orderer0.example.com
      - ca.{ORGANISATION_NAME}
      - peer0.{ORGANISATION_NAME}.example.com
    networks:
      - NETWORK_NAME
